{"version":3,"sources":["views/nav.js","App.js","serviceWorker.js","index.js","graphs/DepGraph.js"],"names":["React","require","Tab","Tabs","NavTabs","Component","render","routes","this","props","createElement","id","activeKey","activeRoute","onSelect","onNavigate","map","route","key","eventKey","title","DepGraph","bundles","js-tendermint","bundleNames","Object","keys","App","constructor","super","state","mode","bundle","selectMode","target","setState","selectBundle","bundleData","react_default","a","className","nav","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","ObservableStore","GraphContainer","ForceGraph","util","createNode","createLink","configData","createModuleGraph","nodes","links","forEach","parentId","file","package","packageName","deps","size","entry","configForPackage","resources","label","JSON","stringify","color","packageConfig","globals","some","glob","redAlertGlobals","includes","orangeAlertGlobals","getColorForConfig","push","radius","depName","childId","source","link","module","exports","graph","container","width","height","graphStore","componentDidMount","updateGraph","componentWillReceiveProps","nextProps","packageData","pack","assign","values","createPackageGraph","createGraphByMode","updateState","onResize","actions","selectNode","console","log","ref","containerRef","onSize","createStyle"],"mappings":"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","file":"static/js/main.4de49fff.chunk.js","sourcesContent":["import './bootstrap.css';\nconst React = require('react')\nconst Tab = require('react-bootstrap/Tab')\nconst Tabs = require('react-bootstrap/Tabs')\n\nclass NavTabs extends React.Component {\n  render() {\n    const { routes } = this.props\n    return (\n      <Tabs\n        id=\"navigation-tabs\"\n        activeKey={this.props.activeRoute}\n        onSelect={this.props.onNavigate}\n      >\n        {routes.map(route => (\n          <Tab key={route} eventKey={route} title={route}></Tab>\n        ))}\n      </Tabs>\n    )\n  }\n}\n\nexport default NavTabs","import React, { Component } from 'react'\nimport './App.css'\nimport Nav from './views/nav'\nconst DepGraph = require('./graphs/DepGraph')\n\nconst bundles = {\n  'js-tendermint': require('./data/deps.json'),\n}\nconst bundleNames = Object.keys(bundles)\n\nconst routes = ['packages', 'modules']\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      mode: routes[0],\n      bundle: 'js-tendermint',\n    }\n  }\n\n  selectMode (target) {\n    this.setState(state => ({ mode: target }))\n  }\n\n  selectBundle (target) {\n    this.setState(state => ({ bundle: target }))\n  }\n\n  render () {\n    const bundleData = bundles[this.state.bundle]\n    return (\n      <div className=\"App\">\n        <Nav\n          routes={bundleNames}\n          activeRoute={this.state.bundle}\n          onNavigate={(target) => this.selectBundle(target)}\n          />\n        <Nav\n          routes={routes}\n          activeRoute={this.state.mode}\n          onNavigate={(target) => this.selectMode(target)}\n          />\n        <DepGraph\n          bundleData={bundleData}\n          mode={this.state.mode}\n          /> \n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const React = require('react')\nconst ObservableStore = require('obs-store')\nconst { GraphContainer, ForceGraph, util: { createNode, createLink } } = require('react-force-directed')\nconst configData = require('../data/config.json')\n\nclass DepGraph extends React.Component {\n\n  constructor () {\n    super()\n    // prepare empty graph\n    this.graph = { nodes: [], links: [], container: { width: 0, height: 0 } }\n    // contain graph in observable store\n    this.graphStore = new ObservableStore(this.graph)\n  }\n\n  componentDidMount () {\n    // generate graph\n    const { bundleData, mode } = this.props\n    this.updateGraph(bundleData, mode)\n  }\n\n  componentWillReceiveProps (nextProps) {\n    // recalculate graph if `mode` or `bundleData` change\n    if (this.props.mode !== nextProps.mode || this.props.bundleData !== nextProps.bundleData) {\n      const { bundleData, mode } = nextProps\n      this.updateGraph(bundleData, mode)\n    }\n  }\n\n  updateGraph (bundleData, mode) {\n    const { nodes, links } = createGraphByMode(bundleData, mode)\n    this.graphStore.updateState({ nodes, links })\n  }\n\n  onResize (size) {\n    this.graphStore.updateState({ container: size })\n  }\n\n  render () {\n    const actions = {\n      selectNode: console.log\n    }\n\n    return (\n      <div className=\"fullSize\" ref={this.containerRef}>\n        <GraphContainer onSize={size => this.onResize(size)}>\n          <ForceGraph graphStore={this.graphStore} actions={actions}/>\n        </GraphContainer>\n        {ForceGraph.createStyle()}\n      </div>\n    )\n  }\n}\n\nmodule.exports = DepGraph\n\n\nfunction createGraphByMode (bundleData, mode) {\n  // create graph for mode\n  if (mode === 'modules') {\n    return createModuleGraph(bundleData)\n  } else {\n    return createPackageGraph(bundleData)\n  }\n}\n\nfunction createPackageGraph (bundleData) {\n  const packageData = {}\n  \n  // create a fake `bundleData` using the packages\n  Object.keys(bundleData).forEach(parentId => {\n    const module = bundleData[parentId]\n    const { package: packageName } = module\n    let pack = packageData[packageName]\n    // if first module in package, initialize with module\n    if (!pack) {\n      pack = Object.assign({}, module)\n      pack.file = `${packageName} files`\n      pack.entry = (packageName === '<root>')\n      pack.deps = {}\n      packageData[packageName] = pack\n    } else {\n      // package already exists, just need add size (deps added later)\n      const { size } = module\n      pack.size += size\n    }\n    // add deps\n    Object.values(module.deps).forEach(id => {\n      // use `id` so that there are not redundant links. the actual key is not important.\n      pack.deps[id] = bundleData[id].package\n    })\n  })\n\n  return createModuleGraph(packageData)\n}\n\nfunction createModuleGraph (bundleData) {\n  const nodes = [], links = []\n\n  // for each module, create node and links \n  Object.keys(bundleData).forEach(parentId => {\n    const { file, package:packageName, deps, size, entry } = bundleData[parentId]\n    const radius = 5\n    const configForPackage = configData.resources[packageName] || {}\n    const configLabel = JSON.stringify(configForPackage, null, 2)\n    const label = `${packageName}\\n${file}\\n${configLabel}`\n    const isEntryPackage = packageName === '<root>'\n    const color = isEntryPackage ? 'purple' : getColorForConfig(configForPackage)\n    // create node for modules\n    nodes.push(\n      createNode({ id: parentId, radius, label, color })\n    )\n    // create links for deps\n    Object.keys(deps).forEach(depName => {\n      const childId = deps[depName]\n      links.push(\n        createLink({ source: parentId, target: childId })\n      )\n    })\n  })\n\n  // handle missing nodes (e.g. external deps)\n  links.forEach(link => {\n    if (!bundleData[link.target]) {\n      nodes.push(\n        createNode({ id: link.target, radius: 0 })\n      )\n    }\n  })\n\n  return { nodes, links }\n}\n\nconst redAlertGlobals = [\n  'chrome',\n  'window',\n  'document',\n  'document.body',\n  'document.body.appendChild',\n  'location',\n  'XMLHttpRequest',\n  'WebSocket',\n  'crypto',\n]\n\nconst orangeAlertGlobals = [\n  'localStorage',\n  'prompt',\n]\n\nfunction getColorForConfig (packageConfig) {\n  // no globals - should be safe\n  if (!packageConfig.globals) return 'green'\n  const globals = Object.keys(packageConfig.globals)\n  if (globals.some(glob => redAlertGlobals.includes(glob))) {\n    return 'red'\n  }\n  if (globals.some(glob => orangeAlertGlobals.includes(glob))) {\n    return 'brown'\n  }\n  // has globals but nothing scary\n  return 'orange'\n}"],"sourceRoot":""}